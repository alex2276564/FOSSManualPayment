name: Build FOSSManualPayment

on:
  push:
    branches: [main]

  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  lint-actions:
    name: üßπ Lint Actions
    runs-on: ubuntu-latest

    permissions:
      pull-requests: write

    steps:
      - uses: actions/checkout@main

      - uses: devops-actions/actionlint@main

  lint-php:
    name: üßπ Lint PHP
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@main

      - name: PHP Syntax Check
        run: |
          find . -name "*.php" -print0 | xargs -0 -n1 php -l
          if [ $? -ne 0 ]; then
            echo "PHP syntax check failed"
            exit 1
          fi

  lint-links:
    name: üßπ Lint Links
    runs-on: ubuntu-latest

    permissions:
      checks: write

    steps:
      - uses: actions/checkout@main

      - name: Lint Links (push)
        if: github.event_name != 'pull_request'
        uses: umbrelladocs/action-linkspector@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-check
          fail_level: error

      - name: Lint Links (PR)
        if: github.event_name == 'pull_request'
        uses: umbrelladocs/action-linkspector@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          fail_level: error

  lint-markdown:
    name: üßπ Lint Markdown
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@main

      - name: Lint Markdown files
        uses: DavidAnson/markdownlint-cli2-action@main
        with:
          globs: "**/*.md" # Checks all Markdown files in the repository
          fix: true # automatically fixes simple problems
          config: ".markdownlint.jsonc" # if you have a configuration file
  #        continue-on-error: true  # to prevent the build from crashing due to errors in the documentation

  security-scan-snyk:
    name: üîê Security Scan Snyk
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@main

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/php@master
        continue-on-error: true # Don't stop the pipeline because maybe snyk api limit
        with:
          args: --severity-threshold=high --sarif-file-output=snyk.sarif

      - name: Upload result scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif

  secrets-scan-trufflehog:
    name: üîë Secrets Scan
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 0 # Required for diff scan

      - name: TruffleHog Secrets Scan (full)
        if: github.event_name != 'pull_request'
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          extra_args: --results=verified,unknown

      - name: TruffleHog Secrets Scan (diff)
        if: github.event_name == 'pull_request'
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.pull_request.base.sha }}
          head: ${{ github.event.pull_request.head.sha }}
          extra_args: --results=verified,unknown

  build:
    name: üèóÔ∏è Build Plugin
    needs:
      [
        lint-actions,
        lint-php,
        lint-links,
        lint-markdown,
        security-scan-snyk,
        secrets-scan-trufflehog,
      ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@main

      - name: Create directories
        run: mkdir -p library/Payment/Adapter data/assets/gateways

      - name: Move FOSSManualPayment.php
        run: mv FOSSManualPayment.php library/Payment/Adapter/

      - name: Move FOSSManualPayment.png
        run: mv FOSSManualPayment.png data/assets/gateways/

      - name: Create release archive
        run: zip -r FOSSManualPayment.zip library data

      - uses: actions/upload-artifact@main
        with:
          name: FOSSManualPayment
          path: FOSSManualPayment.zip
